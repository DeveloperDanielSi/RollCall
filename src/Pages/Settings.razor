@page "/settings"
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Settings</PageTitle>

<!-- User Profile Section -->
<h3>User Profile</h3>
<div>
    <p>Name: @userName</p>
    <p>Email: @userEmail</p>
    <p>Role: @userRole</p>
</div>

<!-- Logout Button -->
<button class="btn btn-primary" @onclick="Logout">Logout</button>

@code {
    // Fields to store user data
    private string userName = string.Empty;
    private string userEmail = string.Empty;
    private string userRole = string.Empty;

    // On component initialization, fetch user data from JavaScript
    protected override async Task OnInitializedAsync()
    {
        var userData = await JSRuntime.InvokeAsync<UserData>("getUserData");
        if (userData != null)
        {
            userName = userData.DisplayName;
            userEmail = userData.Email;
            userRole = userData.Role;
            StateHasChanged(); // Notify the component to re-render
        }
    }

    // Method to update user data fields
    public async Task UpdateUserData(UserData userData)
    {
        userName = userData.DisplayName;
        userEmail = userData.Email;
        userRole = userData.Role;
        await InvokeAsync(StateHasChanged); // Notify the component to re-render
    }

    // Method to log out the user
    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("logout"); // Call JavaScript function to log out
        Navigation.NavigateTo("/"); // Navigate to the home page
    }

    // Class to represent user data
    public class UserData
    {
        public string DisplayName { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
    }
}
